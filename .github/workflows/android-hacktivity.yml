name: 📱 Android HackerOne Reports

on:
  workflow_dispatch:  # manual trigger
  schedule:
    - cron: '0 12 * * *'  # runs every day at 12:00 UTC

jobs:
  scrape-android-reports:
    runs-on: ubuntu-latest

    steps:

    
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to access all branches

    - name: Make script executable
      run: chmod +x ./slack_notify.sh


    - name: 🐍 listing
      run: |
          ls

    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        pip install selenium webdriver-manager beautifulsoup4 requests pandas

    - name: 🧩 Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: 📥 Fetch Existing android-report.json from main branch (if exists)
      run: |
        # Check if android-reports.json exists in the repository
        if [ -f android-reports.json ]; then
          # Rename the existing file to old-android-report.json
          mv android-reports.json old-android-reports.json
          echo "Renamed existing android-report.json to old-android-report.json"
        else
          # Print message if file is not found
          echo "android-reports.json file not found"
        fi



    - name: 🕷️ Run Scraper
      run: |
        python scrape.py

    - name: 📊 Compare with Existing Data and Check for New Vulnerabilities
      id: compare
      run: |
          # Compare newly scraped vulnerabilities with the json data
          if [ -f android-reports.json ] && [ -f old-android-reports.json ]; then
            # Compare both files for differences and extract new vulnerabilities
            new_vulnerabilities=$(jq -s '.[0] - .[1]' android-reports.json old-android-reports.json)
  
            # If there are any new vulnerabilities, send them to Slack
            if [ "$(echo "$new_vulnerabilities" | jq length)" -gt 0 ]; then
              echo "new_data=true" >> $GITHUB_OUTPUT
              echo "$new_vulnerabilities" > new-found.json
              cat new-found.json
               echo "New vulnerabilities found and saved in new-found.json"
            else
              echo "new_data=false" >> $GITHUB_OUTPUT
               echo "No New vulnerabilities found"
            fi
          else
            echo "new_data=false" >> $GITHUB_OUTPUT
            echo "No New vulnerabilities found"

          fi

    - name: Send Slack Notification
      run: |
        WEBHOOK_URL="${{ secrets.WEBHOOK_URL }}" ./slack_notify.sh


    - name: 💾 Overwrite android-reports.json and README.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
      run: |
        REPO="${{ github.repository }}"
        BRANCH="main"
    
        for FILE in android-reports.json README.md; do
          BASE64_CONTENT=$(base64 -w 0 "$FILE")
          COMMIT_MSG="Update $FILE on $(date)"
    
          SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/$REPO/contents/$FILE?ref=$BRANCH | jq -r .sha)
    
          curl -s -X PUT https://api.github.com/repos/$REPO/contents/$FILE \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d @- <<EOF {
      "message": "$COMMIT_MSG",
      "content": "$BASE64_CONTENT",
      "branch": "$BRANCH",
      "sha": "$SHA"
    }
    EOF
        done
